const SCHEDULE_TEMPLATE=[
 {key:"hydrate",time:"06:15",title:"Hydrate",note:""},
 {key:"workout",time:"06:30",title:"Workout",note:"Post-workout: Protein + small carbs"},
 {key:"snack1",time:"10:30",title:"Snack",note:"Protein + fats"},
 {key:"lunch",time:"13:00",title:"Lunch",note:"Lean protein + moderate carbs + veggies"},
 {key:"snack2",time:"16:30",title:"Snack",note:"Protein + veggies or nuts"},
 {key:"dinner",time:"19:00",title:"Dinner",note:"Lean protein + low carb veggies + healthy fats"},
 {key:"dose",time:"22:30",title:"Sermorelin 40 mg",note:"No food after 9:45 PM"}
];
function loadState(){try{return JSON.parse(localStorage.getItem("mfl_state")||"{}")}catch(e){return {}}}
function saveState(s){localStorage.setItem("mfl_state",JSON.stringify(s))}
function initDefaultState(){const st=loadState();if(!st.schedule)st.schedule=SCHEDULE_TEMPLATE;if(!st.waterGoal)st.waterGoal=8;if(!st.water)st.water={};if(!st.checks)st.checks={};if(!st.streak)st.streak=0;if(!st.weekProgress)st.weekProgress={};saveState(st)}
function todayKey(){const d=new Date();return d.toISOString().slice(0,10)}
function renderToday(){const st=loadState();const timeline=document.getElementById("timeline");timeline.innerHTML="";document.getElementById("dayLabel").textContent=(new Date()).toLocaleDateString(undefined,{weekday:"long"});document.getElementById("streakCount").textContent=st.streak||0;const dayKey=todayKey();const checks=st.checks[dayKey]||{};st.schedule.forEach(item=>{const li=document.createElement("li");const t=document.createElement("div");t.className="task";const cb=document.createElement("input");cb.type="checkbox";cb.checked=!!checks[item.key];cb.addEventListener("change",()=>{const s=loadState();const dk=todayKey();s.checks[dk]=s.checks[dk]||{};s.checks[dk][item.key]=cb.checked;saveState(s);updateWeekGrid();updateProgress()});const content=document.createElement("div");content.innerHTML=`<div class="time">${toHuman(item.time)}</div><div class="desc"><strong>${item.title}</strong><br>${item.note||""}</div>`;const badge=document.createElement("div");badge.className="badge";badge.textContent="Today";t.append(cb,content,badge);li.appendChild(t);timeline.appendChild(li)});renderWater();updateProgress()}
function toHuman(t){const [h,m]=t.split(":").map(x=>parseInt(x,10));const d=new Date();d.setHours(h);d.setMinutes(m);return d.toLocaleTimeString([], {hour:"numeric", minute:"2-digit"})}
function renderWater(){const st=loadState();const dayKey=todayKey();const wrap=document.getElementById("waterDrops");wrap.innerHTML="";const filled=st.water[dayKey]||0;for(let i=0;i<st.waterGoal;i++){const b=document.createElement("button");b.type="button";b.className="drop"+(i<filled?" filled":"");b.addEventListener("click",()=>{const s=loadState();const cur=s.water[dayKey]||0;s.water[dayKey]=(i<cur)?i:i+1;saveState(s);renderWater();updateProgress()});wrap.appendChild(b)}}
function updateWeekGrid(){const wrap=document.getElementById("weekGrid");wrap.innerHTML="";const headers=["Day","Dose","Workout","Cardio","Nutrition"];const rowH=document.createElement("div");rowH.className="row";headers.forEach(h=>{const c=document.createElement("div");c.className="cell";c.style.fontWeight="700";c.textContent=h;rowH.appendChild(c)});wrap.appendChild(rowH);const st=loadState();const today=new Date();const monday=new Date(today);const day=monday.getDay();const diffToMon=(day===0?-6:1)-day;monday.setDate(today.getDate()+diffToMon);for(let i=0;i<7;i++){const d=new Date(monday);d.setDate(monday.getDate()+i);const key=d.toISOString().slice(0,10);const checks=st.checks[key]||{};const row=document.createElement("div");row.className="row";const cells=[d.toLocaleDateString(undefined,{weekday:"short"}),checks["dose"]?"✔":"□",checks["workout"]?"✔":"□",checks["cardio"]?"✔":"□",(checks["lunch"]&&checks["dinner"]&&checks["snack1"])?"✔":"□"];cells.forEach(txt=>{const c=document.createElement("div");c.className="cell";c.textContent=txt;row.appendChild(c)});wrap.appendChild(row)}}
function updateProgress(){const st=loadState();const dk=todayKey();const checks=st.checks[dk]||{};const completed=Object.values(checks).filter(Boolean).length;const total=(st.schedule||[]).length;const waterFrac=(st.water[dk]||0)/(st.waterGoal||8);const pct=Math.min(1,(completed/total)*0.8+waterFrac*0.2);const fill=document.getElementById("progressFill");if(fill)fill.style.width=(pct*100).toFixed(0)+"%"}
function openView(id){document.querySelectorAll(".view").forEach(v=>v.classList.remove("active"));document.getElementById(id).classList.add("active");document.querySelectorAll(".tabbar button").forEach(b=>b.classList.remove("active"));document.querySelector(`.tabbar button[data-target='${id}']`).classList.add("active");if(id==="view-week"){updateWeekGrid();updateProgress()}}
document.querySelectorAll(".tabbar button").forEach(btn=>btn.addEventListener("click",()=>openView(btn.dataset.target)));
function initTimeEditor(){const dlg=document.getElementById("timeEditor");document.getElementById("editTimesBtn").addEventListener("click",()=>{const st=loadState();const wrap=document.getElementById("timeForm");wrap.innerHTML="";st.schedule.forEach((item,idx)=>{const row=document.createElement("div");row.className="row";row.innerHTML=`<input type="text" value="${item.title}" data-idx="${idx}" data-k="title"><input type="time" value="${item.time}" data-idx="${idx}" data-k="time">`;wrap.appendChild(row)});dlg.showModal()});dlg.addEventListener("close",()=>{if(dlg.returnValue==="save"){const st=loadState();dlg.querySelectorAll("[data-idx]").forEach(inp=>{const idx=+inp.dataset.idx;const k=inp.dataset.k;st.schedule[idx][k]=inp.value});saveState(st);renderToday()}})}
initDefaultState();initTimeEditor();renderToday();updateWeekGrid();if("serviceWorker"in navigator){navigator.serviceWorker.register("./service-worker.js").catch(()=>{})}
document.getElementById("resetWeekBtn").addEventListener("click",()=>{localStorage.removeItem("mfl_state");initDefaultState();renderToday();updateWeekGrid()});
